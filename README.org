
* Scopes Raylib Bindings

Bindings of [[https://github.com/raysan5/raylib][Raylib]] for the [[https://scopes.rocks][Scopes]] programming language.

This is an incredibly thin wrapper as such and you can basically use
the raylib C-API with Scopes notation. Some of the naming prefixes
have been scrubbed to make calling things less verbose.

There are a few macros added for "begin-end" type constructs that you
can see in use in the examples, but you don't need to use them.

** Installation

The module is under ~src/raylib~. You can copy this subtree into your
project and then add it to the ~package.path~ in your Scopes
~_project.sc~ file.

You will need to make sure that ~raylib.h~ can be found on
~package.include-path~ and ~libraylib.so~ can be found in
~package.library-path~.

*** With Spack

This module is available as the ~scopes-raylib~ package in the
[[https://github.com/salotz/snailpacks][snailpacks]] repository. This will pull in the necessary dependencies
including Scopes and Raylib.

#+begin_src sh
  spack install scopes-raylib
#+end_src

See the [[https://github.com/salotz/snailpacks][snailpacks]] documentation for more best practices of installing.

** Development Environment

We use [[https://spack.io/][Spack]] to install dependencies. First install Spack.

Then you'll need our custom repo of build recipes:

#+begin_src sh
  mkdir -p ~/.spack/repos
  git clone git@github.com:salotz/snailpacks.git ~/.spack/repos/snailpacks
  spack repo add ~/resources/spack-repos/snailpacks
#+end_src

Then you need to create an environment in this folder that will
contain the headers and libraries etc.

#+begin_src sh
  spack env create -d .
#+end_src

Activate the environment (i.e. set the environment variables
appropriately) and install the packages:

#+begin_src sh
  spacktivate .
  spack install
#+end_src

Note that the first time running this could take quite a while since
Spack actually compiles *all* of the dependencies from scratch and
doesn't use your system packages at all. The biggest of these being
LLVM, if you haven't already installed Scopes with Spack. This only
needs to be done once per LLVM version.

At this point you can run examples etc. providing the ~-p~ flag:

#+begin_src sh
  scopes -p ./examples/001_core_basic_window.sc
#+end_src

To exit the environment (i.e. unset the env variables):

#+begin_src sh
  despacktivate
#+end_src



** Running Examples

First install the development environment as above then you can run them.

Then you can run the examples with the ~-p~ flag:

#+begin_src sh
  scopes -p ./examples/01_core_basic_window.sc
#+end_src

